[1.8.0]
- Improve performance of SynchronizedQueue

[1.7.6]
- Fix memory leak when using multiple broadcastQuery calls

[1.7.5]
- Remove ArrayList allocation in SnapshotArrayList.ensureCapacity

[1.7.4]
- Fix race condition in MessageTransmissionPool.allocate(). Add unit test.

[1.7.3]
- Fix MessageTransmissions being deallocated early when sending to multiple ImmediateExchanges

[1.7.2]
- Fix ImmediateExchange not returning MesssageTransmission to pool

[1.7.1]
- Reduce allocations in MessageExchange

[1.7.0]
- Changed to using mini2Dx-lock-provider library to support game consoles
- Source/target compatability now Java 8

[1.6.0]
- Add EntityMessageData for transportation of entities in an Entity-Component-System pattern
- Allow for cancellation of messages in the bus queue
- Add method to notify message bus of deleted entities so that messages are cancelled
- Add CancelledMessageHandler that can be notified of cancelled messages

[1.5.0]
- Add LockProvider interface to allow for alternative locking implementations

[1.4.0]
- Upgrade to Gradle 5.4
- Reduced garbage generation by switching to synchronized ArrayDeque by default

[1.3.1]
- Added flag to disable java.util.concurrent package usage

[1.3.0]
- Added default MessageDataPool implementation
- All utility MessageData implementations can now optionally be pooled instances

[1.2.1]
- Added PooledMessageData interface for implementing pooling

[1.2.0]
- MessageExchange instances can now contain multiple MessageHandlers
- Added utility MessageData implementations for sending primitives and primitive arrays

[1.1.1]
- Provided MessageData implementations no longer require message type

[1.1.0]
- Query messages can now optionally require direct responses

[1.0.0]
- Initial release